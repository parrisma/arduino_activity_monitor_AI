/*
 * This cpp file is automatically generated by the Python project
 * The JSON config file named [conf.json] by default is converted to a
 * .h and a .cpp (this file), where this cpp file contains a string literal
 * that contains an escaped version of the JSON that can be read by the c++
 * JSON library in Arduino sketch projects. This way we can be sure all the
 * sketch and Python projects share exactly the same configuration.
*/

#include "json_conf.h"
const int json_conf_len = 1083;
const char json_conf[] = "{\"ble_collector\": {\"service_name\": \"ActivityCollector\", \"ble_base_uuid\": \"-0000-1000-8000-00805F9B34FB\", \"service_uuid\": \"FF01\", \"characteristic_uuid\": \"0000F001\", \"characteristic_uuid_ble\": \"F001\", \"characteristic_len\": 40, \"sample_interval\": 200}, \"ble_predictor\": {\"service_name\": \"ActivityPredictor\", \"service_uuid\": \"FF02\", \"characteristic_uuid\": \"0000F002\", \"characteristic_uuid_ble\": \"F001\", \"sample_interval\": 200, \"predict_interval\": 1000, \"model_type\": \"cnn\"}, \"cnn\": {\"look_back_window_size\": 20, \"num_features\": 3, \"training_steps\": 250, \"tf_lite\": {\"arena_size\": 5000}}, \"lstm\": {\"look_back_window_size\": 20, \"num_features\": 3, \"training_steps\": 250, \"tf_lite\": {\"arena_size\": 5000}}, \"simple\": {\"look_back_window_size\": 20, \"num_features\": 3, \"training_steps\": 250, \"tf_lite\": {\"arena_size\": 5000}}, \"classes\": [{\"class_name\": \"circle\", \"one_hot\": [1, 0, 0]}, {\"class_name\": \"stationary\", \"one_hot\": [0, 1, 0]}, {\"class_name\": \"up-down\", \"one_hot\": [0, 0, 1]}]}";

